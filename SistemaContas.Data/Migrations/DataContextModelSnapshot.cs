// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaContas.Data.Contexts;

#nullable disable

namespace SistemaContas.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaContas.Data.Entities.Categoria", b =>
                {
                    b.Property<Guid?>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDCATEGORIA");

                    b.Property<Guid?>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDUSUARIO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("TIPO");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("CATEGORIA", (string)null);
                });

            modelBuilder.Entity("SistemaContas.Data.Entities.Conta", b =>
                {
                    b.Property<Guid?>("IdConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDCONTA");

                    b.Property<DateTime?>("Data")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("DATA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DESCRICAO");

                    b.Property<Guid?>("IdCategoria")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDCATEGORIA");

                    b.Property<Guid?>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDUSUARIO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOME");

                    b.Property<decimal?>("Valor")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("IdConta");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("CONTA", (string)null);
                });

            modelBuilder.Entity("SistemaContas.Data.Entities.Usuario", b =>
                {
                    b.Property<Guid?>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDUSUARIO");

                    b.Property<int?>("Ativo")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime?>("DataCriacao")
                        .IsRequired()
                        .HasColumnType("datetime")
                        .HasColumnName("DATACRIACAO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("SENHA");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("SistemaContas.Data.Entities.Categoria", b =>
                {
                    b.HasOne("SistemaContas.Data.Entities.Usuario", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaContas.Data.Entities.Conta", b =>
                {
                    b.HasOne("SistemaContas.Data.Entities.Categoria", "Categoria")
                        .WithMany("Contas")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SistemaContas.Data.Entities.Usuario", "Usuario")
                        .WithMany("Contas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("SistemaContas.Data.Entities.Categoria", b =>
                {
                    b.Navigation("Contas");
                });

            modelBuilder.Entity("SistemaContas.Data.Entities.Usuario", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Contas");
                });
#pragma warning restore 612, 618
        }
    }
}
